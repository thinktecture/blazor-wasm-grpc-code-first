name: Build and Deploy Container Image to Azure Container Apps

on:
  push:
    paths:
      - '*'
  workflow_dispatch:

defaults:
  run:
    working-directory: .

jobs:
  build-container-image:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 'Build and Push Image to ACR'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/grpccodefirst:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/grpccodefirst:${{ github.sha }}

  deploy-container-app:
    runs-on: ubuntu-latest
    needs: build-container-image
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Create Container App'
      uses: Azure/cli@v1
      continue-on-error: true
      with:
        inlineScript: |
          echo "Installing containerapp extension"
          az extension add --source https://workerappscliextension.blob.core.windows.net/azure-cli-extension/containerapp-0.2.0-py2.py3-none-any.whl --yes
          echo "Starting Creating"
          az containerapp create -n grpccodefirst -g ${{ secrets.RESOURCE_GROUP }} --environment cw-blazor-grpc --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/grpccodefirst:${{ github.sha }} --target-port 80 --ingress 'external' --query configuration.ingress.fqdn --registry-login-server ${{ secrets.REGISTRY_LOGIN_SERVER }} --registry-username  ${{ secrets.REGISTRY_USERNAME }} --registry-password ${{ secrets.REGISTRY_PASSWORD }} --debug

    - name: 'Deploy Container App'
      uses: Azure/cli@v1
      with:
        inlineScript: |
          echo "Starting Deploying"
          az containerapp update -n grpccodefirst -g ${{ secrets.RESOURCE_GROUP }} -i ${{ secrets.REGISTRY_LOGIN_SERVER }}/grpccodefirst:${{ github.sha }} --registry-login-server ${{ secrets.REGISTRY_LOGIN_SERVER }} --registry-username  ${{ secrets.REGISTRY_USERNAME }} --registry-password ${{ secrets.REGISTRY_PASSWORD }} --debug
